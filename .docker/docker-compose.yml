version: '3.7'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  nginx:
    image: nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    networks:
      backend:
        aliases:
          - ${APP_HOST}

  php-fpm:
    image: php-fpm
    build:
      context: .
      dockerfile: ./php-fpm/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    networks:
      - backend
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
        - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
        - MONGO_INITDB_ROOT_USERNAME=${MONGO_DB_ROOT_USERNAME}
        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_ROOT_PASSWORD}
    volumes:
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - ${MONGO_DB_PORT}:27017
    networks:
      - backend

  workspace:
    image: workspace
    build:
      context: .
      dockerfile: ./workspace/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - "${WORKSPACE_HOST_SSH_PORT}:22"
    networks:
      - backend